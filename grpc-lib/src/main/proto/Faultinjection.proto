syntax = "proto3";

option java_package = "com.inria.spirals.mgonzale.grpc.lib";
//option java_multiple_files = true;
option java_outer_classname = "Faultinjection";
option objc_class_prefix = "FI";

enum InjectionType {
      UNKNOWN = 0;
      FLOOD= 1;
      DROP= 2;
      LOSS= 3;
      CORRUPT = 4;
      REORDER = 5;
      DUPLICATE = 6;
      DELAY = 7;
      LIMIT = 8;
      DELETE = 9;
      DOWN = 10;

 }

enum InjectionAction {
	START = 0;
	STOP = 1;
	START_WAIT_STOP = 2;

}

message Injection {
	string id = 1;
	InjectionType name = 2;
	InjectionAction action = 3;
	int64 amount = 4;
	string path = 5;
	int32 probability =6;
	int32 percentage = 7;
	int32 errorCode =8;
	string iface = 9;
  	int32 sleep = 10;
}

message TriggerRequest {
  Injection injection = 1;
}
message TriggerResponse {
  string token = 1;
}

message EndPointRequest {
	string address = 1;
	int32 port = 2;
	string kind = 3;
}

message EndPointResponse {
	bool accepted = 1;
}

message StringMessage {
	string text =1 ;
}


message TriggerStatus {
	Injection injection = 1;
	bool executed = 2;
	bool success = 3;
	bool cancelled = 4;
	string info =5;
}

message ListTriggerRequest {
}

message ListTriggerResponse {
	map<string, TriggerStatus> triggers = 1;
}

message CancelRequest {
	string token = 1;
}

message CancelResponse {
	bool done = 1;
}

message VoidMessage {
}

service Agent {

  rpc trigger( TriggerRequest) returns ( TriggerResponse);

  rpc cancel( CancelRequest) returns ( CancelResponse);

  rpc register( EndPointRequest) returns ( EndPointResponse);


  rpc listTriggers (ListTriggerRequest ) returns ( ListTriggerResponse);

  rpc cleanup (VoidMessage) returns ( VoidMessage);

  rpc shutdown (VoidMessage) returns ( stream VoidMessage);

}
